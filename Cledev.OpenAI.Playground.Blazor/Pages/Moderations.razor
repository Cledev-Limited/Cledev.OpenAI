@page "/moderations"

@inherits ModerationsPage

<PageTitle>Cledev.OpenAI - Moderations</PageTitle>

<h1 class="pb-3 mb-4 border-bottom">Moderations</h1>

<p class="mb-4">Given a input text, outputs if the model classifies it as violating OpenAI's content policy. Related guide: <a href="https://platform.openai.com/docs/guides/moderation" title="Moderations" target="_blank">Moderations</a>.</p>

<EditForm Model="Request" OnValidSubmit="OnSubmitAsync">
    <div class="mb-3">
        <InputText id="Input" placeholder="Input (Optional)" @bind-Value="Request.Input" class="form-control" />
    </div>

    <div class="modal fade" id="optionsModal" tabindex="-1" aria-labelledby="optionsModalLabel" aria-hidden="true">
        <div class="modal-dialog">
            <div class="modal-content">
                <div class="modal-header">
                    <h5 class="modal-title" id="optionsModalLabel">Options</h5>
                    <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Close"></button>
                </div>
                <div class="modal-body">
                    <div class="row">
                        <label for="Model" class="col-sm-5 col-form-label">
                            <i class="fa-regular fa-circle-question" href="#" data-bs-toggle="tooltip" data-bs-placement="right" title="Required. ID of the model to use. You can use the text-davinci-edit-001 or code-davinci-edit-001 model with this endpoint."></i>
                            Model
                        </label>
                        <div class="col-sm-7">
                            <InputSelect id="Model" @bind-Value="Request.Model" class="form-select">
                                @foreach (var item in ModerationModels)
                                {
                                    <option value="@item">@item</option>
                                }
                            </InputSelect>
                        </div>
                    </div>
                </div>
                <div class="modal-footer">
                    <button type="button" class="btn btn-secondary" data-bs-dismiss="modal">Close</button>
                </div>
            </div>
        </div>
    </div>

    @if (IsLoading)
    {
        <button class="btn btn-primary text-nowrap" type="button" disabled>
            <span class="spinner-border spinner-border-sm" role="status" aria-hidden="true"></span>
            Creating Moderation...
        </button>
        <button type="button" class="btn btn-outline-secondary" disabled>Options</button>
    }
    else
    {
        <button type="submit" class="btn btn-primary">Create Moderation</button>
        <button type="button" class="btn btn-outline-secondary" data-bs-toggle="modal" data-bs-target="#optionsModal">Options</button>
    }
</EditForm>

@if (Response is not null && Error is null)
{
    <div class="row my-4">
        <div class="col-6">
            <h4>Response</h4>

            @for (var index = 0; index < Response.Results.Count; index++)
            {
                var result = Response.Results[index];
                <div class="card d-flex mt-3">
                    <div class="card-header">
                        Result @(index + 1)
                    </div>
                    <div class="card-body">
                        <div class="mb-3">
                            <span class="fw-bold mb-3">Flagged</span>: @result.Flagged
                        </div>
                        <div class="mb-2 pb-2 border-bottom">Categories</div>
                        <span class="fw-bold">Hate</span>: @result.Categories?.Hate<br/>
                        <span class="fw-bold">Hate/Threatening</span>: @result.Categories?.HateThreatening<br />
                        <span class="fw-bold">Self-Harm</span>: @result.Categories?.SelfHarm<br />
                        <span class="fw-bold">Sexual</span>: @result.Categories?.Sexual<br />
                        <span class="fw-bold">Sexual/Minors</span>: @result.Categories?.SexualMinors<br />
                        <span class="fw-bold">Violence</span>: @result.Categories?.Violence<br />
                        <span class="fw-bold">Violence/Graphic</span>: @result.Categories?.ViolenceGraphic
                        <div class="mt-3 mb-2 pb-2 border-bottom">Category Score</div>
                        <span class="fw-bold">Hate</span>: @result.CategoryScores?.Hate<br/>
                        <span class="fw-bold">Hate/Threatening</span>: @result.CategoryScores?.HateThreatening<br />
                        <span class="fw-bold">Self-Harm</span>: @result.CategoryScores?.SelfHarm<br />
                        <span class="fw-bold">Sexual</span>: @result.CategoryScores?.Sexual<br />
                        <span class="fw-bold">Sexual/Minors</span>: @result.CategoryScores?.SexualMinors<br />
                        <span class="fw-bold">Violence</span>: @result.CategoryScores?.Violence<br />
                        <span class="fw-bold">Violence/Graphic</span>: @result.CategoryScores?.ViolenceGraphic
                    </div>
                </div>
            }

            <div class="card d-flex mt-3">
                <div class="card-header">
                    Info
                </div>
                <div class="card-body">
                    <span class="fw-bold">Id</span>: @Response.Id<br />
                    <span class="fw-bold">Model</span>: @Response.Model<br />
                </div>
            </div>
        </div>
    </div>
}

<Error Model="Error"></Error>
